!function(){angular.module("ngWebRTC",[])}();
!function(){"use strict";function e(e,n){function o(e,n,o){void 0===o?navigator.getUserMedia({audio:!0,video:!0},e,n):navigator.getUserMedia(o,e,n)}function t(e,n,o,t,i,c){R=e,v=n,m=o,h=t,void 0!==i&&(b=i),void 0!==c&&(D=c)}function i(e){if(M[e])return M[e];var n=new RTCPeerConnection(b);return M[e]=n,n.addStream(R),n.onicecandidate=function(n){s(n,e)},n.onaddstream=d,n.oniceconnectionstatechange=function(){c(n.iceConnectionState)},n}function c(e){switch(console.log("Connection state changed",e),e){case"disconnected":m(e);break;case"connected":v(e);break;case"completed":v(e);break;case"checking":h(e);break;default:h(e)}}function a(){return R}function r(){return T}function d(e){console.log("Got new stream :: ",e),T=e.stream}function s(e,n){console.log("Got ice candidate",e.candidate),null!==e.candidate&&D.methods.postIceCandidate(e.candidate,n).then(function(){console.log("ngWebRTC :: Ice candidate correctly sent")}).catch(function(e){console.log("ngWebRTC :: Ice candidate error",e)})}function f(e){var n=i(e.emitter);n.addIceCandidate(new window.RTCIceCandidate(e.ice))}function u(e){var n=i(e.emitter);e={sdp:e.RTCDescription,type:"answer",emitter:e.emitter},console.log("Accepting answer : ",e),angular.forEach(S,function(e){n.addIceCandidate(new window.RTCIceCandidate(e))}),n.setRemoteDescription(new window.RTCSessionDescription(e),function(){console.log("Added answer as local description : ",e)},function(e){console.log(e)})}function w(e){var n=i(e.emitter);e={sdp:e.RTCDescription,type:"offer",emitter:e.emitter},n.setRemoteDescription(new window.RTCSessionDescription(e)),angular.forEach(S,function(e){n.addIceCandidate(new window.RTCIceCandidate(e))}),n.createAnswer(function(o){n.setLocalDescription(o),D.methods.postOffer(o,e.emitter,"sdp-answer").then(function(){console.log("ngWebRTC :: acceptOffer success")}).catch(function(e){console.log("ngWebRTC :: acceptOffer error",e)})},function(e){console.log(e)})}function l(e){var n=i(e);n.createOffer(function(o){n.setLocalDescription(o),D.methods.postOffer(o,e)},function(e){console.log(e)},I)}function C(e){}function g(e){return k=[],angular.forEach(e,function(e){switch(e.type){case"sdp-offer":e.RTCDescription=n.decode(e.RTCDescription),k.push(e);break;case"sdp-answer":e.RTCDescription=n.decode(e.RTCDescription),u(e);break;case"ice":console.log("got ice from server : ",e),S.push(e.ice)}}),k}function p(){var n=e.defer();return D.methods.get("/webrtc/offer").then(function(e){n.resolve(g(e.data.offers))}).catch(function(e){n.reject(e)}),n.promise}window.RTCPeerConnection=window.RTCPeerConnection||window.webkitRTCPeerConnection||window.mozRTCPeerConnection,window.RTCIceCandidate=window.RTCIceCandidate||window.mozRTCIceCandidate||window.webkitRTCIceCandidate,window.RTCSessionDescription=window.RTCSessionDescription||window.mozRTCSessionDescription||window.webkitRTCSessionDescription,navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;var R,T,m,v,h,b={iceServers:[{urls:"stun.l.google.com:19302"}]},D={url:"",methods:{postIceCandidate:function(e,n){console.log("ngWebRTC :: posting Ice Candidate : ")},postOffer:function(e,n,o){console.log("ngWebRTC :: posting offer data : ")}}},I={offerToReceiveAudio:!0,offerToReceiveVideo:!0},k=[],S=[],M={},O={getOffers:p,acceptOffer:w,refuseOffer:C,createOffer:l,getExternalMediaStream:r,getLocalMediaStream:a,getUserMedia:o,init:t,onExternalIceCandidate:f};return O}angular.module("ngWebRTC").factory("$webrtc",e),e.$inject=["$q","$base64"]}();